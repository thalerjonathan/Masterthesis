Noch Offen

Erledigt
	-> OK		netzwerke parametrisierbar machen bei experimentdefinition
	-> OK		netzwerke aus result öffnen können um zum visualisieren, dort dann nach gephi exportierbar
	-> OK		netzwerke ebenfalls exportieren bei result: in das result-file
	-> OK		standardabweichugnen in results: total tx
	-> OK		in results hinzufügen: successful tx und auch deren standardabweichugnen
	-> OK		standardabweichugnen in results: failed tx

	-> OK		InspectionPanel überarbeiten
				-> OK		implements ActionListener usw... wegbekommen
				-> OK		ordentliche callbacks im simulation-thread anstatt starke kopplung an InspectionPanel!
				-> OK		checkbox um bei jeder TX ein redraw zu forcen
				-> OK		network visualization wieder funktionsfähig
					-> aber in eigenem fenster

	-> OK		standardabweichungen in replikationen berechnen
	
	-> OK		statistiken vom collateral/cash marktpreis
	
	-> OK		theoretisches gleichgewicht wird für fully connected noch nicht erreicht
				-> !!!!!!!!!!!!! beim match evtl den preis anders: seller + buyer / 2 !!!!!!!!!!!!!
				-> !!!! epsilon werte beim offering !!! 
						if ( this.markets.isLoanMarket() && this.cashEndow > Markets.TRADING_EPSILON )
						anstatt
						if ( this.markets.isLoanMarket() && this.cashEndow > 0 )
						macht extrem viel aus, sonst werden die theoretischen gleichgewichte nicht erreicht!
			
	-> OK	 	neuen Markt einführen: Collateralized Assets gegen Cash

Wenn noch zeit:
	-> TODO		theoretisches equilibrium berechnen und feststellen ob erreicht: nur bei fail
				- in gewissen grenzen: z.b. auf 2 nachkommastellen genau
	
	-> TODO		Optimieren von Matchingwahrscheinlichkeiten bzw. Importance Sampling
				anpassung an die nachbar limitprices, aber nicht deterministisch sondern auch zufällig ( mit 1/10 diese optimierung machen und dann untersuchen). 
				somit kommt es mit höherer wahrscheinlichkeit zu matches zwischen ascending-nachbaren. ABER: dann keine reinen zero-intelligence agents.
				-> IMPORTANCE-SAMPLING
				-> upper/lower limit immer auf nachbar käufer/verkäufer limitprice setzen funktioniert bei ascending_connected nicht - wieso eigentlich nicht? wahrscheinlich reduziert es die wahrscheinlichkeit noch mehr
				-> ober/unter grenze währenddessen erlernen d.h. bei erfolgreichen transaktionen nach oben bzw. unten verschieben und dann mit einer 50% wahrscheinlichkeit daraus ziehen funktioniert auch nicht
	
				-> Initiale Sampleanzahl von Anzahl der Agenten und Topologie abhängig: wie berechnen
					-> Variante mit Sampling muss mindestens gleich gut funktionieren wie die mit uniform random 
				-> Neue Samples müssen mit einer gewissen Wahrscheinlichkkeit hinzugefügt werden: welcher?
					-> Integralfläche?
					-> Wichtigkeit des Samples?
	
	-> TODO		wieder mehere bond-typen zurückeinbauen, da ein wesentlicher punkt im paper ist, dass wenn mehrere loans zur verfügung stehen, die riskioreichen NICHT gehandelt werden

	-> TODO		Refatorings