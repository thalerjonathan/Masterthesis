Vorbereitung
	September - Dezember 2014
		-> Themenfindung
		-> Papers lesen

	Jänner 2014
		-> Orginalpaper nochmal genau durchgehen
			-> Andere Papers anschauen:
			-> Geanakoplos
			-> Gode & Sunders

	Februar
		-> Buch über Entscheidungstheorie
		-> Meetings mit HV und Thomas Breuer
		-> LaTex aufsetzen 
		-> Struktur der Masterarbeit definieren
		-> Literaturrecherche	
		-> Softwarerecherche
			-> Java weil: das ursprüngliche framework von breuer & al. in Java, ausserdem vielzahl an existierenden frameworks, die leicht zu integrieren sind
			-> C++ nicht: wäre zwar schneller aber nur wenn richtig verwendet => mehraufwand und geschwindigkeit nicht unbedingt so extrem kritisch, ausserdem immer großer puff mit frameworks
			-> Graphenbibliothek für Java
		-> Abstract & Einleitung schreiben
		
Arbeitsschritte & Meilensteine bis zur Abgabe
	Implementieren von netzwerken in das existierende framework: visualisieren der vorgänge des frameworks
		- Gui: SWING
		- Netzwerk-visualisierng: JUNG
		- Diagramme: JFreeChart
		- Network generator: selber bauen
			- random
			- scale-free
			- small-world
			- clustering
	
	3 Netzwerke überlegen bei denen Hypothese erfüllt und 3 bei denen nicht.
		- 3 die ok sind
			1: linearer graph: d.h. aufsteigend paarweise verbunden
		- 3 die nicht ok sind
			1: watts-strogatz
			2: barbasi modell
			3: ?
		
	Javaprogramm
		- Realtime-Visualisierung der Vermögensverteilungen der Agenten
		- Realtime-Visualisierung der Netzwerke
		- Netzwerke generieren: fixe Anzahl Agenten, verbindungen unter ihnen nach einer gewissen Topologie
			1. paarweise aufsteigend
			2. Watts-Strogatz
			3. Barbasi
		- Handelsbeziehungen über das Netzwerk auswählen d.h. das matching probiert nur zwischen diesen zwei benachbarten agenten
		- Code refaktoring und aufräumen
		

Zeitpunkte
	Bis Februar
		-> Thema fixieren
		-> Literaturübersicht
		-> Orginalpaper komplett verstanden
		-> Softwareframeworks ausgesucht
		-> Grundlegend mit Softwareframeworks und Code vom Paper vertraut gemacht
		-> LaTex Software und Template eingerichtet 
		
	März: IMPLEMENTIERUNG
		-> OK		Realtime-Visualisierung der Vermögensverteilungen der Agenten
		-> OK		Realtime-Visualisierung der Netzwerke
		-> OK		Netzwerke generieren: fixe Anzahl Agenten, verbindungen unter ihnen nach einer gewissen Topologie
		-> OK		Handelsbeziehungen über das Netzwerk auswählen d.h. das matching probiert nur zwischen diesen zwei benachbarten agenten
		-> OK		gewichte bei erfolgreicher transaktion: inkrementieren/einmal auf 1 setzen
		-> OK		Auch für Auktionen mit Loan funktioniert: AuctionWithLoan, AgentsWithLoan, TransactionWithLoan
		-> OK		schönere layouts
		-> OK		Code refaktoring und aufräumen: inner classes herausziehen wo sinnvoll
		-> OK		Netzwerkvisualisierung > 50 Agenten unsichtbar
		-> OK		Beschleunigung: matching auf nachbaren und nicht globales offering book
		-> OK		Offer-Book: Anzeigen der Besten-Offers eines Agenten nach jeder TX
		-> NEIN		Multithreaded: kurz probiert, viel zu komplex, müsste die ganze backend-architektur komplett umbauen und selbst dann ists noch fraglich ob es wirklich was bringt
					großer nutzen nur bei vielen agenten (ab 500) und für das gleichgewicht auch schon unter 100 agenten ausreichen 
		
	April: THEORIE VERTIEFUNG UND AUSARBEITUNG
		-> TODO		Brauchbaren Gleichgewichtsbegriff definieren und auch im Programm einführen d.h. das Programm erkennt wann sich ein Gleichgewicht eingestellt hat und benachrichtigt den Benutzer
		-> TODO		Hypothese beweis/widerlegen
		-> TOOD		verhalten der simulation genau studieren
		-> TODO		wieso kommt es bei ascending zu keinem gleichgewicht sondern nur mit shortcuts ab einer gewissen N und wie muss N in abhängigkeiten der agentenanzahl gewählt werden?
		
	Mai: SCHREIBEN
		
	Juni: SCHREIBEN
		-> Kapitel 1 "Theorie" schreiben. Dieser erst ganz zum schluss, damit der theorieteil einen sinnvollen kontext bekommt und nicht bloß als trockener nackter theorieteil daherkommt, 
				den man vor jede andere x-beliebige masterthesis setzen kann die sich auch mit komplexeren netzwerken auseinandersetzt.
		-> Kapitel 5 "Conclusions and Perspectives" schreiben.
		
	Juli: KORREKTUREN
		-> Feintuning und Überarbeitung
		-> Finale Abgabe am 27.
			-> wenn auf das Kinderlager mit am 17. Juli abgabe


